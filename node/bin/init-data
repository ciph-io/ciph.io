#!/usr/bin/env node

'use strict'

/* native modules */
const path = require('path')

/* npm modules */
const crypto = require('mz/crypto')
const fs = require('fs-extra')

/* globals */
const hexChars = [0,1,2,3,4,5,6,7,8,9,'a','b','c','d','e','f']

initData().catch(console.error)

async function initData () {
    const dataRoot = path.resolve(process.cwd(), process.argv[2])
    // create root dir
    await fs.ensureDir(dataRoot)
    // create 256 dirs for each possible 2 char hex prefix
    for (let a of hexChars) {
        for (let b of hexChars) {
            const dataDir = `${a}${b}`
            // create directories and random files for each size
            createRandomFile(path.resolve(dataDir, 's'), 256*1024)
            createRandomFile(path.resolve(dataDir, 'm'), 1024*1024)
            createRandomFile(path.resolve(dataDir, 'l'), 4*1024*1024)
        }
    }
}

async function createRandomFile (dataDir, size) {
    await fs.ensureDir(dataDir)                
    const data = await crypto.randomBytes(size)
    const hash = crypto.createHash('sha256')
    hash.update(data)
    const fileName = `${hash.digest('hex').substr(0,32)}.ciph`
    await fs.writeFile(path.resolve(dataDir, fileName), data)
}